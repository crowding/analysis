 #we pull only direction or adjustment files for now.
--command --invisible --match   virtualdatafiles/(.*(ConcentricDirection|ConcentricAdjustment).*)
                                svn export 
#                                'svn+ssh://peterm@pat.shadlen.org/home/peterm/svn/eyetracking/data/{0}' 
                                'file:///Volumes/homedir/svn/eyetracking/data/{0}' 
--output --mkdir --intermediate datafiles/{0}

##The translator script
--command               Rscript 
                        logfile-reader/readR.R #--input...
--match --input         'datafiles/(.*)\.log(\.gz)?'
--output                unpacked/{0}.RData
--invisible --phony     unpacked

--command               Rscript 
--input                 eyemovements.R
--match --input         unpacked/(.*Segment\.RData)
--output --mkdir        eyemovements/{0}
--invisible --phony     eyemovements

--command           Rscript 
--input             strip.R
--match --input     unpacked/(.*\.RData)
--output --mkdir    stripped/{0}
--invisible --phony eyemovements

#the common script is specific to direction experiments
--command           RScript
--input             common.R
--input --invisible common.manipulations.R
--match --input     'stripped/(.*ConcentricDirection.*\.RData)'
--output --mkdir    common/{0}
--invisible --phony common

#And here's the common script for adjustment experiments.
--command           	RScript
--input             	adjustment_common.R
--match     --input 	'unpacked/(.*Adjustment.*)\.RData'
--output    --mkdir 	'common_adj/{0}'.RData
--invisible --phony 	common

## all this stuff about "sources" is kind of old and busted but...

#gather "sources"? Multimatch would be nice here.
--command --once printf --once "'%s\n'" --once > 
--output --once pools/{0}.allsources
--input --match 'unpacked/.*(DX|TF|SF|Timing|Dt_N|Constant|Occlusion|Segment|Discriminability|Timing|Strokes)\.RData'
--invisible --phony --once allsources

#titrate experiments had a few names
--command --once printf --once "'%s\n'" --once > 
--output --once pools/Titrate.allsources 
--input --match 'unpacked/.*(Discriminability|Titrate|CritDistance)\.RData' 
--invisible --phony --once allsources

--command --input --invisible setdiff ./setdiff
--input pools/{0}.allsources
--input --match 'pools/(.*)\.exclude'
> --output pools/{0}.sources
--invisible --phony --once sources

--command sed %-e 's/unpacked/common/' 
--input --match 'pools/(.*)\.sources'
> --output pools/{0}.csources

--command Rscript --input aggregate.R --input --match --listing --invisible '(pools/(.*)\.csources)' 
"$$(" cat {0} ")"
--output pools/{1}.RData
--phony --invisible pools

--command sed %-e s/common/eyemovements 
--input --match pools/Segment\.csources 
> --output Segment.eyemovements.sources '$$(' --input --listing pools/Segment.sources Segment.eyemovements.sources

